rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* --------- reglas de usuarios --------- */
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create, delete: if hasRole(['admin']);
    }

    /* --------- reglas de calificaciones --------- */
    match /grades/{g} {
      allow create: if hasRole(['teacher','admin']);
      allow read: if hasRole(['admin','teacher']) ||
                  request.auth.uid == resource.data.userId;
    }

    /* --------- resto de colecciones (ejemplo) --------- */
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if hasRole(['admin','teacher']);
    }

    /* ---------- función auxiliar ---------- */
    function hasRole(roles) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid))
        &&  get(/databases/$(database)/documents/users/$(request.auth.uid))
              .data.roles.hasAny(roles);
    }

    match /admin/reports/{doc} {
      allow read: if request.auth != null;        // cualquiera logueado
      allow write: if hasRole(['admin']);         // función hasRole ya definida
    }
  }
}
